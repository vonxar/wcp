package test;

public class checked extends tasu {
	private static String stone;

	public static boolean chekedwin(boolean player){
		int count = 0;
		if(player == true) {
		 stone = "●";
		} else {
		 stone = "◯";
		}
		for(int said=0;said<banall.length;said++){ //横
			count = 0;
	        for(int a=0;a<banall.length;a++){
	        	 if(count == 5) {
	        		 System.out.println(stone+"の勝ちです。");
		        	  win = true;
		        	  break;
	        	 }
	        	String b = banall[said][a];
	        	if(count != 5) {
	        		if (b == stone) {
		        		  count++;
		        	}
	        		else {
		        		  count = 0;
		        	}
		        }
	        }
	    }
		for(int x=0;x<banall.length;x++){ //縦
			count = 0;
	        for(int y=0;y<banall[0].length;y++){
	        	 if(count == 5) {
	        		 System.out.println(stone+"の勝ちです。");
		        	  win = true;
		        	  break;
	        	 }
	          String b = banall[y][x];
	          if(count != 5) {
		        	  if (b == stone) {
		        		  count++;
		        	  } else {
		        		  count = 0;
		        	  }
		          }
	          }
	        }
		for(int y=0;y<banall.length;y++){ //斜め上
			int up = 0;
			int yoko = y;
			count = 0;
	        for(int x=0;x<=banall.length;x++){
	        	 if(count == 5) {
	        		 System.out.println(stone+"の勝ちです。");
		        	  win = true;
		        	  break;
	        	 }
	        	if((yoko < 0) || (up > 7)) {
	        	break;
	        	}
	          String b = banall[yoko][up];
	          up++;
	          yoko--;
	          if(count != 5) {
		        	  if (b == stone) {
		        		  count++;
		        	  } else {
		        		  count = 0;
		        	  }
		          }
	          }
	        }




		for(int y=1;y<=banall.length-5;y++){ //斜め上エリアカバー
			int up = y;
			int yoko = 7;
			count = 0;
	        for(int x=0;x<8;x++){
	        	 if(count == 5) {
	        		 System.out.println(stone+"の勝ちです。");
		        	  win = true;
		        	  break;
	        	 }
	        	if((yoko <= 0) || (up >= 7)) {
	        	break;
	        	}
	          String b = banall[yoko][up];
	          up++;
	          yoko--;
	          if(count != 5) {
		        	  if (b == stone) {
		        		  count++;
		        	  } else {
		        		  count = 0;
		        	  }
		          }
	          }
	        }


		for(int y=0;y<banall.length;y++){ //斜め下
			count = 0;
			int down = 0;
			int yoko=y;
	        for(int x=y;x<=8;x++){
	        	 if(count == 5) {
	        		 System.out.println(stone+"の勝ちです。");
		        	  win = true;
		        	  break;
	        	 }
	        	if((down >7) || (yoko > 7)) {
	        		break;
	        	}
	          String b = banall[yoko][down];
	          down++;
	          yoko++;
	          if(count != 5) {
		        	  if (b == stone) {
		        		  count++;
		        	  } else {
		        		  count = 0;
		        	  }
		          }
	          }
	        }

		for(int y=1;y<=banall.length-5;y++){ //斜め下カバーエリア
			count = 0;
			int down = y;
			int yoko=0;
	        for(int x=0;x<8;x++){
	        	 if(count == 5) {
	        		 System.out.println(stone+"の勝ちです。");
		        	  win = true;
		        	  break;
	        	 }
	        	if((down > 7) || (yoko > 7)) {
	        		break;
	        	}
	          String b = banall[yoko][down];
	          down++;
	          yoko++;
	          if(count != 5) {
		        	  if (b == stone) {
		        		  count++;
		        	  } else {
		        		  count = 0;
		        	  }
		          }
	          }
	        }


		return win;
		  }



	public static boolean cputansaku(){
		int count = 0;
		int xs[] = new int[4];
		int ys[] = new int[4];
//		int rndx = new Random().nextInt(xs.length);
//		int rndy = new Random().nextInt(ys.length);
		 stone = "●";
		for(int y=0;y<banall.length;y++){ //横
			count = 0;
	        for(int x=0;x<banall.length;x++){
	        	 if(count > 2) {
	        		 if((count ==4)&&(banall[y][xs[3]+1] != "◯" )) {
	        			 int tate = xs[3]+1;
	        			 if ((tate > 0) && (banall[y][tate] == null) || (banall[y][tate] != "◯")) {
	        			 tasu.setban(y, tate, "◯");
	        			 return true;
	        			 }
	        			 else {
	        				 break;
	        			 }
	        		 }
	        		 else {
	        			 if((count ==4)&&(banall[y][xs[3]+1] == "◯")){
	        				 break;
	        			 }
	        			 int tate = xs[0]-1;
	        			 if (tate >= 0) {
	        			 tasu.setban(y, tate, "◯");
	        			 return true;
	        			 }
	        		 }
		        	  break;
	        	 }
	        	String b = banall[y][x];
	        	if(count != 4) {
	        		if (b == stone) {
		        		 xs[count] = x;
		        		 ys[count] = y;
		        		 count++;
		        		 if((count ==3)&&(banall[y][x+1] == stone)) {
		        			 xs[count] = x+1;
			        		 ys[count] = y;
			        		 count++;
		        		 }
		        	}
	        		else {
		        		  count = 0;
		        	}
		        }
	        }
	    }
		for(int x=0;x<banall.length;x++){ //縦
			count = 0;
	        for(int y=0;y<banall.length;y++){
			 if(count > 2) {
        		 if(count ==4) {
        			 int yoko = ys[3]+1;
        			 if ((yoko > 0) && (banall[yoko][x] == null) || (banall[yoko][x] != "◯")) {
        			 tasu.setban(yoko, x, "◯");
        			 return true;
        			 }
        			 else {
        				 break;
        			 }
        		 }
        		 else {
        			 int yoko = ys[0]-1;
        			 if (yoko >= 0) {
        			 tasu.setban(yoko, x, "◯");
        			 return true;
        			 }
        		 }
	        	  break;
        	 }
        	String b = banall[y][x];
        	if(count != 4) {
        		if (b == stone) {
	        		 xs[count] = x;
	        		 ys[count] = y;
	        		 count++;
	        		 if((count ==3)&&(banall[y+1][x] == stone)) {
	        			 xs[count] = x;
		        		 ys[count] = y+1;
		        		 count++;
	        		 }
	        	}
        		else {
	        		  count = 0;
	        	}
	        }
        }
    }




		for(int y=0;y<banall.length;y++){ //斜め上
			int up = 0;
			int yoko = y;
			count = 0;
	        for(int x=0;x<=banall.length;x++){
	        	System.out.println("c"+count);
	        	if(count > 2) {
	        	 if(count ==4) {
        			 yoko = ys[3]-1;
        			 if ((yoko >= 0) && (banall[yoko][up+1] == null) || (banall[yoko][up+1] != "◯")) {
        			 tasu.setban(yoko, up+1, "◯");
        			 return true;
        			 }
        			 else {
    				  break;
        			 }
	        	 }
        		 else {
        			 System.out.println(ys[0]);
            			 yoko = ys[0]+1;
            			 if ((yoko >= 0)&&(up-1 >=0)) {
            			 tasu.setban(yoko, up-1, "◯");
            			 return true;
            			 }
            	 }
            	 }
	        	if((yoko < 0) || (up > 7)) {
	        	break;
	        	}
	          String b = banall[yoko][up];
	          System.out.println(b);
	          System.out.println(yoko+"up"+up);
	          if(b == stone) {
	          xs[count] = up;
     		  ys[count] = yoko;
	          up++;
	          yoko--;
	          count++;
	           	if((count ==3)&&(banall[y-1][up+1] == stone)) {
     			     xs[count] = up+1;
	        		 ys[count] = y-1;
	        		 count++;
     		    }
	          }
	          else {
	        	          up++;
		                  yoko--;
		        		  count = 0;
		        	  }
		          }
		}




		for(int y=1;y<=banall.length-5;y++){ //斜め上エリアカバー
			int up = y;
			int yoko = 7;
			count = 0;
	        for(int x=0;x<8;x++){
	        	 if(count == 5) {
	        		 System.out.println(stone+"の勝ちです。");
		        	  win = true;
		        	  break;
	        	 }
	        	if((yoko <= 0) || (up >= 7)) {
	        	break;
	        	}
	          String b = banall[yoko][up];
	          up++;
	          yoko--;
	          if(count != 5) {
		        	  if (b == stone) {
		        		  count++;
		        	  } else {
		        		  count = 0;
		        	  }
		          }
	          }
	        }


		for(int y=0;y<banall.length;y++){ //斜め下
			count = 0;
			int down = 0;
			int yoko=y;
	        for(int x=y;x<=8;x++){
	        	 if(count == 5) {
	        		 System.out.println(stone+"の勝ちです。");
		        	  win = true;
		        	  break;
	        	 }
	        	if((down >7) || (yoko > 7)) {
	        		break;
	        	}
	          String b = banall[yoko][down];
	          down++;
	          yoko++;
	          if(count != 5) {
		        	  if (b == stone) {
		        		  count++;
		        	  } else {
		        		  count = 0;
		        	  }
		          }
	          }
	        }

		for(int y=1;y<=banall.length-5;y++){ //斜め下カバーエリア
			count = 0;
			int down = y;
			int yoko=0;
	        for(int x=0;x<8;x++){
	        	 if(count == 5) {
	        		 System.out.println(stone+"の勝ちです。");
		        	  win = true;
		        	  break;
	        	 }
	        	if((down > 7) || (yoko > 7)) {
	        		break;
	        	}
	          String b = banall[yoko][down];
	          down++;
	          yoko++;
	          if(count != 5) {
		        	  if (b == stone) {
		        		  count++;
		        	  } else {
		        		  count = 0;
		        	  }
		          }
	          }
	        }


		return false;
		  }

	}